heat_template_version: 2013-05-23

description: Template that creates a private network.

parameters:
  public_net:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    default: public-971
  private_net_cidr:
    type: string
    label: CIDR
    description: Classless Inter-Domain Routing (CIDR) of the private network.
    default: '10.10.10.0/24'
  private_net_gateway:
    type: string
    description: Private network gateway address
    default: '10.10.10.1'
  dns:
    type: comma_delimited_list
    label: DNS nameservers
    description: Comma separated list of DNS nameservers for the private network.
    default: '156.26.250.22,156.26.10.21,156.26.1.1'

  # allocation_pools not defined but available for future templates
  # private_net_pool_start:
  #   type: string
  #   description: Start of private network IP address allocation pool
  # private_net_pool_end:
  #   type: string
  #   description: End of private network IP address allocation pool

resources:
  private_net:
    type: OS::Neutron::Net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      dns_nameservers: { get_param: dns }

      # allocation_pools not defined but available for future templates
      # allocation_pools:
      #   - start: { get_param: private_net_pool_start }
      #     end: { get_param: private_net_pool_end }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }

outputs:
  name:
    description: The private network.
    value: { get_attr: [private_net, name] }
