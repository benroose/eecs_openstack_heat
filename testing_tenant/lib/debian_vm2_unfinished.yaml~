heat_template_version: 2013-05-23

description: Template that installs a wordpress server.

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use a Debian based image.
    default: debian_server-9-cloudimg
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: test
  private_net:
    type: string
    label: Private network name or ID
    description: Network to attach server to.
    default: private

  # PARAMETERS FOR SCRIPTING INSTANCE

  ssh_known_hosts_file
    type: string
    label: ssh systemwide known_hosts file
    description: instance global known_hosts file.
    default: /etc/ssh/ssh_known_hosts

  policyhub_dev_host_key
    type: string
    label: policyhub host key
    description: RSA host key for policyhub-dev to insert into instance known_hosts file.
    hidden: true
    default: policyhub-dev ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKdee8Pla/Adl7/ZlHuEQL9CDfbpDC82Y4kkgEctxSzi3kNBUUCKs2ALvUPN/jMPrVc8ux4urlTHVlFSiTMAOFixjJT9Kq9tyAJr9sGOH8oL1LDLo+niQEKZbCV5RciH8e0u7IVv2oV+1miX6p+bLPIn/XfNLaarPJaxwZxcpEZ+9tVqPFcs5WGAwkIuxxRR+cx7OekL9flZQGmb4MT3nE1h/Mgw5xDsNFYraIxXqvq5XogHSbQ85brCoRXUSTuG3dAgiXL0z/eXtHq0LQSXSgFDwE4FoB47Lk1t/Uupm66HYF8+5ZmwpurqbzkKqJIFphdLvbL72LX3WnXJgPk0vn
  

resources:
  security_group:
      type: OS::Neutron::SecurityGroup
      properties:
        name: ssh_ping_ingress
        description: SSH and Ping ingress security group
        rules:
          - protocol: icmp
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      security_groups:
        - { get_resource: security_group }

  debian_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __policyhub_dev_host_key__: { get_attr: [policyhub_dev_host_key, value] }
            __ssh_known_hosts_file__: { get_attr: [ssh_known_hosts_file, value] }

            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash
            
	    # add policyhub to known_hosts file
	    echo "__policyhub_dev_host_key__" >> __ssh_known_hosts_file__

	    # copy CFEngine installation script
            scp roose@???


            apt-get update
            export DEBIAN_FRONTEND=noninteractive
            apt-get install -y mysql-server
 
            # configure MySQL root password
            mysqladmin -u root password "__mysql_root_password__"
 
            # listen on all network interfaces
            sed -i "s/bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/my.cnf
 
            # restart service
            service mysql restart
 
            # create wordpress database
            mysql -u root --password="__mysql_root_password__" <<EOF
            CREATE DATABASE __database_name__;
            CREATE USER '__database_user__'@'localhost';
            SET PASSWORD FOR '__database_user__'@'localhost'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'localhost' IDENTIFIED BY '__database_password__';
            CREATE USER '__database_user__'@'%';
            SET PASSWORD FOR '__database_user__'@'%'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'%' IDENTIFIED BY '__database_password__';
            FLUSH PRIVILEGES;
            EOF
 
            # notify heat that we are done here
            wc_notify --data-binary '{"status": "SUCCESS"}'

outputs:
  name:
    description: Name of the instance.
    value: { get_attr: [debian_instance, name] }
  ip:
    description: The IP address of the instance.
    value: { get_attr: [debian_instance, first_address] }
  port:
    description: The network port of the instance.
    value: { get_resource: port }
