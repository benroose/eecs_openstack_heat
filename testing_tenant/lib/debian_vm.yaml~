heat_template_version: 2013-05-23

description: Template to install a debian test VM

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use a Debian based image.
    default: debian_server-9-cloudimg
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: test
  private_network:
    type: string
    label: Private network name or ID
    description: Network to attach server to.
    default: private

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 600

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  security_group:
      type: OS::Neutron::SecurityGroup
      properties:
        name: ssh_ping_ingress
        description: Allow incoming SSH (22) and PING (ICMP) security group
        rules:
          - protocol: icmp
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22
          - protocol: tcp
            port_range_min: 5000
            port_range_max: 5000

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network }
      security_groups:
        - { get_resource: security_group }

  debian_test_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex

            # let Heat know we are done
            wc_notify --data-binary '{"status": "SUCCESS"}'

outputs:
  name:
    description: Name of the instance.
    value: { get_attr: [debian_test_instance, name] }
  ip:
    description: The IP address of the instance.
    value: { get_attr: [debian_test_instance, first_address] }
  port:
    description: The network port of the instance.
    value: { get_resource: port }
