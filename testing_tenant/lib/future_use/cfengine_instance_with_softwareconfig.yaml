heat_template_version: newton

description: Template to create an instance with ping and SSH access and install/bootstrap to cfengine policyhub.

parameters:
  name:
    type: string
    label: Instance name
    description: Name of server instance created.
    default: testing_box
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use a Debian based image.
    default: debian_server-9-cloudimg
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: test
  private_net:
    type: string
    label: Private network name or ID
    description: Network to attach server to.
    default: private

  # PARAMETERS FOR SOFTWARECONFIG

  policyhub:
    type: string
    description: IP address of CFEngine policyhub, defaults to policyhub-dev.
    default: 156.26.10.17


resources:
  security_group:
      type: OS::Neutron::SecurityGroup
      properties:
        name: ssh_ping_ingress
        description: SSH and Ping ingress security group
        rules:
          - protocol: icmp
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      security_groups:
        - { get_resource: security_group }

  cfengine_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: policyhub_ip
      outputs:
      - name: result
      - name: cf_host_key
      config:
        get_file: cfengine_installer.sh

  deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: cfengine_config
      server:
        get_resource: base_server
      input_values:
        policyhub_ip: { get_param: policyhub }

  # other_deployment:
  #   type: OS::Heat::SoftwareDeployment
  #   properties:
  #     config:
  #       get_resource: cfengine_config
  #     server:
  #       get_resource: base_server
  #     input_values:
  #       policyhub_ip: { get_param: policyhub }
  #     actions:
  #     - CREATE
  #     - UPDATE
  #     - SUSPEND
  #     - RESUME


  base_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data_format: SOFTWARE_CONFIG

outputs:
  name:
    description: Name of the instance.
    value: { get_attr: [base_server, name] }
  ip:
    description: The IP address of the instance.
    value: { get_attr: [base_server, first_address] }
  port:
    description: The network port of the instance.
    value: { get_resource: port }
  result:
    value:
      get_attr: [deployment, result]
  cf_key:
    value:
      get_attr: [deployment, cf_host_key]
  stdout:
    value:
      get_attr: [deployment, deploy_stdout]
  stderr:
    value:
      get_attr: [deployment, deploy_stderr]
  status_code:
    value:
      get_attr: [deployment, deploy_status_code]
  # other_result:
  #   value:
  #     get_attr: [other_deployment, result]
