heat_template_version: newton

description: Template to create an instance with ping/SSH and HTTP/HTTPS access. Initial startup installs and bootstraps to cfengine policyhub.

## DEFINE PARAMS OR PULL IN FROM UPSTREAM TEMPLATE
parameters:
  name:
    type: string
    label: Instance name
    description: Name of server instance created.
    default: web-testing-box
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use a Debian based image.
    default: debian_server-9-cloudimg
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: test
  private_net:
    type: string
    label: Private network name or ID
    description: Network to attach server to.
    default: private

  ## PARAMETERS FOR INSERTING INTO INSTALLER SCRIPT

  policyhub:
    type: string
    description: IP address of CFEngine policyhub, defaults to policyhub-dev.
    default: 156.26.10.17

resources: 
## DEFINE SECURITY GROUPS
  security_group_ssh:
      type: OS::Neutron::SecurityGroup
      properties:
        name: ssh_ping_ingress
        description: Ping, SSH, and keystone ingress security group
        rules:
          - protocol: icmp
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22
          - protocol: tcp
            port_range_min: 5000
            port_range_max: 5000

## DEFINE NETWORK PORT AND LINK SECURITY GROUPS
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      security_groups:
        - { get_resource: security_group_ssh }

  ## SOFTWARECONFIG UNUSED
  # cfengine_config:
  #   type: OS::Heat::SoftwareConfig
  #   properties:
  #     group: script
  #     inputs:
  #     - name: policyhub_ip
  #     outputs:
  #     - name: result
  #     - name: cf_host_key
  #     config:
  #       get_file: cfengine_installer.sh


## DEFINE VM SERVER
  base_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data: 
        str_replace:
          template: { get_file: cfengine_installer.sh }
          params:
            $POLICYHUB_IP: { get_param: policyhub }

## DEFINE OUTPUTS TO UPSTREAM TEMPLATE
outputs:
  name:
    description: Name of the instance.
    value: { get_attr: [base_server, name] }
  ip:
    description: The IP address of the instance.
    value: { get_attr: [base_server, first_address] }
  port:
    description: The network port of the instance.
    value: { get_resource: port }