heat_template_version: 2013-05-23

description: Template that installs a wordpress server.

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use a Debian based image.
    default: debian_server-9-cloudimg
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: test
  private_net:
    type: string
    label: Private network name or ID
    description: Network to attach server to.
    default: private

  # PARAMETERS FOR SCRIPTING INSTANCE

  cfengine_package_link
    type: string
    description: link to cfengine package file.
    default: https://cfengine-package-repos.s3.amazonaws.com/community_binaries/cfengine-community_3.10.1-1_amd64.deb

  cfengine_package_hash
    type: string
    description: SHA256 hash for package listed above.
    default: e6727678f33f463e96628a277e12a2108966e563735ec22cd48a47cb1dcdf61e  

  policyhub
    type: string
    description: IP address of CFEngine policyhub.
    default: 156.26.10.17  

resources:
  security_group:
      type: OS::Neutron::SecurityGroup
      properties:
        name: ssh_ping_ingress
        description: SSH and Ping ingress security group
        rules:
          - protocol: icmp
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      security_groups:
        - { get_resource: security_group }

  debian_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __cfengine_package_link__: { get_attr: [cfengine_package_link, value] }
            __cfengine_package_hash__: { get_attr: [cfengine_package_hash, value] }
	    __policyhub__: { get_attr: [policyhub, value] }

            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash
            
	    # update and upgrade 
            apt-get update
            export DEBIAN_FRONTEND=noninteractive
	    apt-get dist-upgrade
            apt-get install -y wget
 
            # download and install cfengine
	    wget __cfengine_package_link__
	    if [ -e "__cfengine_package_link" ]; then
	      # do an automatic hash check on downloaded package
	      dpkg -i __cfengine_package_link__
	      /var/cfengine/bin/cf-agent --bootstrap __policyhub__
	      
	      Find a way to check for success/failures in sequence and pass back as outputs
 
            # notify heat that we are done here
            wc_notify --data-binary '{"status": "SUCCESS"}'

outputs:
  name:
    description: Name of the instance.
    value: { get_attr: [debian_instance, name] }
  ip:
    description: The IP address of the instance.
    value: { get_attr: [debian_instance, first_address] }
  port:
    description: The network port of the instance.
    value: { get_resource: port }
