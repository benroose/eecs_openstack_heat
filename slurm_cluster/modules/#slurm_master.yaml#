heat_template_version: 2014-10-16

description: Deploy a slurm master instance

parameters:
  key_name:
    type: string
    description: Name of key-pair to be used for the default user
  flavor:
    type: string
    description: |
      Choose an instance flavor
  image:
    type: string
    label: Server image
  private_net:
    type: string
    label: Private Network
    description: Name or ID of private network for cluster
  public_net:
    type: string
    label: Public Network
    description: Name or ID of public network for access floating IP
  master_name:
    type: string
    description: Name of slurm master
  node_name:
    type: string
    description: Name of slurm nodes
  servers:
    type: comma_delimited_list
    label: Servers
    description: Comma separated list of servers in the cluster.
  private_key:
    type: string
    description: Name of private key to be used for the local slurm user
  public_key:
    type: string
    description: Name of public key to be used for the local slurm user

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 300
 
  wait_handle:
    type: OS::Heat::WaitConditionHandle

  slurm_security_group:
        type: OS::Neutron::SecurityGroup
        properties:
          name: slurm_security_group
          rules:
            - protocol: tcp
              remote_ip_prefix: 0.0.0.0/0
              port_range_min: 1024
              port_range_max: 64511
            - protocol: tcp
              remote_ip_prefix: 156.26.0.0/16
              port_range_min: 22
              port_range_max: 22

  slurm_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      security_groups:
        - default
        - { get_resource: slurm_security_group }

  slurm_master:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      name: { get_param: master_name }
      image: { get_param: image }
      networks:
        - port: { get_resource: slurm_port }
      flavor: { get_param: flavor }
      metadata:
        servers: { get_param: servers }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
            $PRIVATE_KEY: { get_param: private_key }
            $PUBLIC_KEY: { get_param: public_key  }
            $STACK_NAME: { get_param: 'OS::stack_name' }
            $NODE_NAME: { get_param: node_name }
            # __prefix__: { get_param: master_name }
          template: { get_file: slurm_setup.sh }
    
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: slurm_port }

outputs:
  name:
    description: Name of this slurm instance.
    value: { get_attr: [slurm_master, name] }
  ip:
    description: The floating IP address of this slurm instance.
    value: { get_attr: [floating_ip, floating_ip_address] }
